/*https://www.hackerrank.com/challenges/occupations/problem*/

select min(T1.doctor), min(T1.professor), min(T1.singer), min(T1.actor) from
(select rank() over (partition by occupation order by name) as ranknum,
case when occupation = 'Doctor' then name end as Doctor,
case when occupation = 'Professor' then name end as Professor,
case when occupation = 'Singer' then name end as Singer,
case when occupation = 'Actor' then name end as Actor
from occupations) as T1
group by T1.ranknum


/*this question repeated in subqueries*/
/*https://www.hackerrank.com/challenges/harry-potter-and-wands/problem*/

Select 
    id, 
    age, 
    coins_needed, 
    power 
    from 
    (select 
        t1.id as id, 
        t2.age as age, 
        t1.coins_needed as coins_needed, 
        t1.power as power, 
        rank () over (partition by t1.power, t2.age order by t1.coins_needed ) as rank
    from wands t1
    join wands_property t2
    on t1.code = t2.code
    where  t2.is_evil = 0) as x1
where rank = 1
order by power desc, age desc


/*https://www.hackerrank.com/challenges/challenges/problem*/
with T1 as (select distinct
    t1.hacker_id as hacker_id, 
    t1.name as name, 
    count(t2.challenge_id) over (partition by t1.hacker_id) as c_cnt
from hackers as t1
join challenges as t2
on t1.hacker_id = t2.hacker_id),

T2 as (select
    hacker_id, 
    name, 
    c_cnt, 
    count(*) over (partition by c_cnt) as r_cnt 
    from T1),

T3 as (select max(c_cnt) as max_val from T2)

select T2.hacker_id, T2.name, T2.c_cnt from T2
where (c_cnt = (select max_val from T3)) or ((c_cnt < (select max_val from T3)) and (r_cnt = 1))
order by T2.c_cnt desc
